---
# Playbook to update attributes in the root object in automate workspace
# This example shows how to set a Automate Retry and also allows you
# to preserve state attributes
# You can pass in extra vars to control the automate_workspace
- hosts: localhost
  vars:
    retry_attrs: { 'ae_result': 'retry', 'ae_retry_interval': 60 }
    other_attrs: { 'name': 'Fred Flintstone', 'city': 'Bedrock' }
    state_attrs: { 'my_task_id': 99, 'save_this': 'secret' }

  tasks:
    - name: Set the automate workspace url
      set_fact:
        aws_url: "{{ manageiq.api_url }}/api/{{ manageiq.automate_workspace }}"

    - name: Fetch the Workspace
      uri:
        url: "{{ aws_url }}"
        method: GET 
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json" 
        status_code: 200 
      register: workspace

    - debug: var=workspace

    - name: Set the Retry Attribute
      uri:
        url: "{{ aws_url }}"
        method: POST
        body:
          action: edit
          resource: "{ 'objects': { 'root': {{ retry_attrs }} }, 'state_vars': {}}"
        body_format: json
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json" 
        status_code: 200
      register: output

    - name: Set the Other Attributes
      uri:
        url: "{{ aws_url }}"
        method: POST
        body:
          action: edit
          resource: "{ 'objects': { 'root': {{ other_attrs }} }, 'state_vars': {}}"
        body_format: json
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json" 
        status_code: 200
      register: output
    - name: Set the Extra State Vars
      uri:
        url: "{{ aws_url }}"
        method: POST
        body:
          action: edit
          resource: "{ 'objects': { }, 'state_vars': {{ state_attrs }}}"
        body_format: json
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json" 
        status_code: 200
